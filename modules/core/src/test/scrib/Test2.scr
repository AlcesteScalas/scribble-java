//Raymond@HZHL3 ~/code/scribble-java/scribble-java
//$ java -cp modules/cli/target/classes/';'modules/core/target/classes';'modules/trace/target/classes';'modules/parser/target/classes';c:\Users\Raymond\.m2\repository\org\antlr\antlr-runtime\3.2\antlr-runtime-3.2.jar;'modules/validation/target/classes/';'modules/projection/target/classes/';C:\Users\Raymond\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.9\jackson-mapper-asl-1.9.9.jar;C:\Users\Raymond\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.9\jackson-core-asl-1.9.9.jar' org.scribble.cli.CommandLine -path modules/validation/src/test/scrib/src/ -validate Test

module Test2;


global protocol Test2Proto(role C, role D)
{
	Test2() from C to D;
}


/*
//import Test;
import test3.Test3 as Test3;  // FIXME: shouldn't be (directly) visible from Test as Test
import Test4;
import Test4 as T4;

global protocol Test2Proto1(role C, role D)
{
	2(Test3.TTT) from C to D;
	2() from C to D;
	//1() from C to D;
	//aaa() from C to D;
	//do Test.Foo(C, D);
	//do Test.Foo(D, C);
	//3() from C to D;
	do Test3.Test3Proto(C, D);
	do Test4.Test4Proto(C, D);
	do T4.Test4Proto(C, D);
}
//*/


/*global protocol Foo(role A, role B, role C)
{
	choice at A
	{
		1() from A to B;
	//do Bar(A, B);
		choice at A
		{
			3() from A to C;
		}
	}
	or
	{
		2() from A to B;
		choice at A
		{
			4() from A to C;
		}
	}
}*/

/*global protocol Bar(role C, role D)
{
	2() from C to D;
	do Foo(C, D);
}*/



/*global protocol Foo2(role A, role B)
{
	//m1() from A to B;

}*/
