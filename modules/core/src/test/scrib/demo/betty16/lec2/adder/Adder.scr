/**
 * (1) Check Adder protocol: 
 * $ scribblec.sh modules/core/src/test/scrib/demo/betty16/lec2/adder/Adder.scr 
 * 
 * (2) Build Endpoint FSM for C: 
 * $ scribblec.sh modules/core/src/test/scrib/demo/betty16/lec2/adder/Adder.scr -fsm Adder C
 * 
 * (3) Generate "Session API" for Adder: 
 * $ scribblec.sh modules/core/src/test/scrib/demo/betty16/lec2/adder/Adder.scr -d modules/core/src/test/scrib/ -session Adder
 * 
 * (3) Generate Endpoint API ("Session API" and "State Channel API") for C: 
 * $ scribblec.sh modules/core/src/test/scrib/demo/betty16/lec2/adder/Adder.scr -d modules/core/src/test/scrib/ -api Adder
 * 
 * (4) [Java] Generate javadoc from Endpoint API(s):
 * $ javadoc -cp modules/cli/target/classes/:modules/core/target/classes:modules/parser/target/classes:modules/core/src/test/scrib -subpackages demo.betty16.lec2.adder.Adder.Adder -d javadoc/demo/betty16/adder
 * 
 */


module demo.betty16.lec2.adder.Adder;


type <java> "java.lang.Integer" from "rt.jar" as Integer;


global protocol Adder(role C, role S) {
	choice at C {
		Add(Integer, Integer) from C to S;
		Res(Integer) from S to C;
		do Adder(C, S);
	} or {
		Bye() from C to S;
		Bye() from S to C;
	}
}
