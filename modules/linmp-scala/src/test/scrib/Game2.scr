module Game2;

type <java> "java.lang.String" from "rt.jar" as String;
type <java> "..." from "..." as State;

//global protocol Setup(role P, role S)
global protocol Proto(role P, role S)
{
	choice at P
	{
		PlayA() from P to S;
		GameA(Game@A) from S to P;
	}
	or
	{
		PlayB() from P to S;
		GameB(Game@B) from S to P;
	}
	or
	{
		PlayC() from P to S;
		GameC(Game@C) from S to P;
	}
}


global protocol Game(role A, role B, role C)
{
	NameAtoB(String) from A to B;
	NameABtoC(String) from B to C;
	NameBCtoA(String) from C to A;
	rec X
	{
		choice at A
		{
			UpdateAB(State) from A to B;
			UpdateBC(State) from B to C;
			UpdateCA(State) from C to A;
			continue X;
		}
		or
		{
			EndAB(String) from A to B;
			EndAC(String) from B to C;
			Ack() from C to A;
		}
	}
}


/* OK
choice at A
{
	UpdateAB(String) from A to B;
	UpdateAC(String) from A to C;
	MoveBA(String) from B to C;
	continue X;
}
or
{
	EndAB(String) from A to B;
	EndAC(String) from A to C;
	Quit() from B to C;
}
//*/

/* Not OK
choice at A
{
	UpdateAB(String) from A to B;
	UpdateAC(String) from A to C;   // "Using "standard" syntactic projection without "multicast", the C messages get treated as continuations to be merged (so protocol not WF) instead of "directed" choice messages
	continue X;
}
or
{
	EndAB(String) from A to B;
	EndAC(String) from A to C;
	//Quit() from C to A;
}
//*/