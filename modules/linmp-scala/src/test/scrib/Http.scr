module Http;

type <java> "java.lang.Boolean" from "rt.jar" as Boolean;
type <java> "java.lang.Integer" from "rt.jar" as Integer;
type <java> "java.lang.String" from "rt.jar" as String;
type <java> "java.time.ZonedDateTime" from "java.time" as ZonedDateTime;

type <java> "RequestLine" from "HttpTypes.scala" as RequestLine;  // GET /~rhu/ HTTP/1.1
type <java> "Body" from "HttpTypes.scala" as Body;
		
type <java> "Version" from "HttpTypes.scala" as Version;  // HTTP/1.1

global protocol Http(role C, role S)
{
	do Request(C, S);
}

aux global protocol Request(role C, role S)
{
	choice at C
	{
		Request(RequestLine) from C to S;  // GET /~rhu/ HTTP/1.1 
		rec X
		{
			choice at C
			{
				Host(String) from C to S;  // Host: www.doc.ic.ac.uk
				continue X;
			}
			or
			{
				UserAgent(String) from C to S;  // User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0
				continue X;
			}
			or
			{
				Accept(String) from C to S;  // Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
				continue X;
			}
			or
			{
				AcceptLanguage(String) from C to S;  // Accept-Language: en-GB,en;q=0.5
				continue X;
			}
			or
			{
				AcceptEncodings(String) from C to S;  // Accept-Encoding: gzip, deflate
				continue X;
			}
			or
			{
				DoNotTrack(Boolean) from C to S;  // DNT: 1
				continue X;
			}
			or
			{
				Connection(String) from C to S;  // Connection: keep-alive
				continue X;
			}
			or
			{
				UpgradeIR(Boolean) from C to S;  // Upgrade-Insecure-Requests: 1 
				continue X;
			}
			or
			{
				RequestBody(Body) from C to S;
				do Response(C, S);
			}
		}
	}
}
	
aux global protocol Response(role C, role S)
{
	HttpVersion(Version) from S to C;  // HTTP/1.1
	choice at S
	{
		Code200(String) from S to C;  // 200 OK
		do ResponseMain(C, S);
	}
	or
	{
		Code404(String) from S to C;
		do ResponseMain(C, S);
	}
}

aux global protocol ResponseMain(role C, role S)
{
		choice at S
		{
			Date(ZonedDateTime) from S to C;  // Date: Sun, 24 May 2015 21:04:36 GMT
			do ResponseMain(C, S);
		}
		or
		{
			Server(String) from S to C;  // Server: Apache
			do ResponseMain(C, S);
		}
		or
		{
			StrictTS(String) from S to C;  // Strict-Transport-Security: max-age=31536000; preload; includeSubDomains
			do ResponseMain(C, S);
		}
		or
		{
			LastModified(ZonedDateTime) from S to C;  // Last-Modified: Sat, 23 Jul 2011 09:38:43 GMT
			do ResponseMain(C, S);
		}
		or
		{
			ETag(String) from S to C;  // ETag: "ac6fa008-559-4a8b95908aec0"
			do ResponseMain(C, S);
		}
		or
		{
			AcceptRanges(String) from S to C;  // Accept-Ranges: bytes
			do ResponseMain(C, S);
		}
		or
		{
			ContentLength(Integer) from S to C;  // Content-Length: 1369
			do ResponseMain(C, S);
		}
		or
		{
			Vary(String) from S to C;  // Vary: Accept-Encoding
			do ResponseMain(C, S);
		}
		or
		{
			ContentType(String) from S to C;  // Content-Type: text/html
			do ResponseMain(C, S);
		}
		or
		{
			Via(String) from S to C;  // Via: 1.1 www.doc.ic.ac.uk	
			do ResponseMain(C, S);
		}
		or
		{
			ResponseBody(Body) from S to C;  // Message length indicated by Content-Length
		}
	}
}
